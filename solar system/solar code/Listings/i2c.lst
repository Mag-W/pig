C51 COMPILER V9.60.0.0   I2C                                                               07/04/2022 15:50:03 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE I2C
OBJECT MODULE PLACED IN .\Objects\i2c.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE I2C\i2c.c OPTIMIZE(8,SPEED) BROWSE INCDIR(.\PUBLIC;.\ADC;.\AT24C02;.\I2C
                    -;.\OLED;.\SERVO) DEBUG OBJECTEXTEND PRINT(.\Listings\i2c.lst) TABS(2) OBJECT(.\Objects\i2c.obj)

line level    source

   1          #include "i2c.h"
   2          
   3          void I2C_Init()
   4          {
   5   1        SCL_H;
   6   1        SDA_H;
   7   1      }
   8          
   9          void I2C_Start()//起始
  10          {
  11   1        SCL_H;
  12   1        SDA_H;
  13   1        
  14   1        SDA_L;
  15   1        SCL_L;
  16   1      }
  17          
  18          void I2C_Stop()
  19          {
  20   1        SCL_H;
  21   1        SDA_L;
  22   1        SDA_H;
  23   1      }
  24          
  25          
  26          void write_byte(uint8_t date)//写入1个字节
  27          {
  28   1        uint8_t i,temp;
  29   1        temp = date;
  30   1        for(i=0;i<8;i++)
  31   1        {
  32   2          temp=temp<<1;  //将temp左移一位，最高位将移入PSW寄存器CY中
  33   2          SCL_L;
  34   2          
  35   2          I2C_SDA=CY;
  36   2        
  37   2          SCL_H;
  38   2          
  39   2        }
  40   1        SCL_L;
  41   1        
  42   1        SDA_H;
  43   1        
  44   1      }
  45          
  46          uint8_t read_byte()//读出一个字节
  47          {
  48   1        uint8_t i,k;
  49   1        SCL_L;
  50   1      
  51   1        SDA_H;
  52   1        for(i=0;i<8;i++)
  53   1        {
  54   2          SCL_H;
C51 COMPILER V9.60.0.0   I2C                                                               07/04/2022 15:50:03 PAGE 2   

  55   2        
  56   2          k=(k<<1)|I2C_SDA;//串行接收字节，8位一位一位地接受
  57   2          SCL_L;
  58   2          
  59   2        }
  60   1      
  61   1        return k;
  62   1      }
  63          
  64          void send_ACK(bit b_ACK)     //主机应答ACK，或不应答,1表示非应答，0表示应答
  65          {
  66   1        SCL_L;
  67   1        if(b_ACK)                    //ACK
  68   1        {
  69   2          SDA_H;        
  70   2        }
  71   1        else                          //ACK
  72   1        {
  73   2          SDA_L;
  74   2        }
  75   1        
  76   1        SCL_H;
  77   1        SCL_L;
  78   1      }
  79          
  80          
  81          
  82          void read_ACK()    //等待 24C02 回应 ACK
  83          {
  84   1        uint8_t t=0;
  85   1        SCL_H;
  86   1        while((I2C_SDA==1)&&(t<250))t++;    //等待ACK，超时跳出
  87   1        SCL_L;
  88   1      }
  89          
  90          
  91          
  92          void write_add(uint8_t address,uint8_t date)    //向 24C02 中写一个字节数据
  93          {
  94   1        I2C_Start();        //起始信号
  95   1        write_byte(0XA0);    //发送写指令
  96   1        read_ACK();        //等待应答
  97   1        write_byte(address);   //发送要写入的地址
  98   1        read_ACK();            //等待应答
  99   1        write_byte(date);    //发送数据
 100   1        read_ACK();           //等待应答
 101   1        I2C_Stop();          //停止信号
 102   1      }
 103          
 104          
 105          uint8_t read_add(uint8_t address,bit ACK)  //从 24C02 中读出数据，读出一个字节
 106          {
 107   1        uint8_t date;
 108   1        I2C_Start();          //第一次起始信号
 109   1        write_byte(0XA0);      //发送写指令
 110   1        read_ACK();              //等待应答
 111   1        write_byte(address);     //发送要读取的地址
 112   1        read_ACK();              //等待应答
 113   1        I2C_Start();            //第二次起始信号
 114   1        write_byte(0XA1);       //发送读指令
 115   1        read_ACK();              //等待应答
 116   1        date=read_byte();      //读数据
C51 COMPILER V9.60.0.0   I2C                                                               07/04/2022 15:50:03 PAGE 3   

 117   1        
 118   1        send_ACK(ACK);     //主机应答ACK或不应答
 119   1        
 120   1        I2C_Stop();          //停止信号
 121   1        
 122   1        return date;
 123   1      }
 124          
 125            
 126          
 127          
 128          
 129          
 130          
 131          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    190    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       2
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
