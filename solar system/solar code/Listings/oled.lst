C51 COMPILER V9.60.0.0   OLED                                                              07/04/2022 15:50:03 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE OLED
OBJECT MODULE PLACED IN .\Objects\oled.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE OLED\oled.c OPTIMIZE(8,SPEED) BROWSE INCDIR(.\PUBLIC;.\ADC;.\AT24C02;.\I
                    -2C;.\OLED;.\SERVO) DEBUG OBJECTEXTEND PRINT(.\Listings\oled.lst) TABS(2) OBJECT(.\Objects\oled.obj)

line level    source

   1          #include "oled.h"
   2          #include "oled_font.h"
   3          
   4          uint8_t xdata OLED_Gram[8][128];
   5          const uint8_t code OLED_init_cmd[25]=
   6          {
   7            /*0xae,0X00,0X10,0x40,0X81,0XCF,0xff,0xa1,0xa4,
   8            0xA6,0xc8,0xa8,0x3F,0xd5,0x80,0xd3,0x00,0XDA,0X12,
   9            0x8d,0x14,0xdb,0x40,0X20,0X02,0xd9,0xf1,0xAF*/
  10                 0xAE,//关闭显示
  11                 0xD5,//设置时钟分频因子,震荡频率
  12                 0x80,  //[3:0],分频因子;[7:4],震荡频率
  13                 0xA8,//设置驱动路数
  14                 0X3F,//默认0X3F(1/64)
  15                 0xD3,//设置显示偏移
  16                 0X00,//默认为0
  17                 0x40,//设置显示开始行 [5:0],行数.                              
  18                 0x8D,//电荷泵设置
  19                 0x14,//bit2，开启/关闭
  20                 0x20,//设置内存地址模式
  21                 0x02,//[1:0],00，列地址模式;01，行地址模式;10,页地址模式;默认10;
  22                 0xA1,//段重定义设置,bit0:0,0->0;1,0->127;
  23                 0xC8,//设置COM扫描方向;bit3:0,普通模式;1,重定义模式 COM[N-1]->COM0;N:驱动路数
  24                 0xDA,//设置COM硬件引脚配置
  25                 0x12,//[5:4]配置            
  26                 0x81,//对比度设置
  27                 0xEF,//1~255;默认0X7F (亮度设置,越大越亮)
  28                 0xD9,//设置预充电周期
  29                 0xf1,//[3:0],PHASE 1;[7:4],PHASE 2;
  30                 0xDB,//设置VCOMH 电压倍率
  31                 0x30,//[6:4] 000,0.65*vcc;001,0.77*vcc;011,0.83*vcc;
  32                 0xA4,//全局显示开启;bit0:1,开启;0,关闭;(白屏/黑屏)
  33                 0xA6,//设置显示方式;bit0:1,反相显示;0,正常显示        
  34                 0xAF,//开启显示     
  35          };
  36          
  37          
  38          void OLED_send_cmd(uint8_t o_command)//写命令
  39          {
  40   1          I2C_Start();
  41   1          write_byte(0x78);//OLED地址
  42   1          read_ACK();
  43   1          write_byte(0x00);//寄存器地址
  44   1          read_ACK();
  45   1          write_byte(o_command);
  46   1          read_ACK();
  47   1          I2C_Stop();
  48   1      }
  49          
  50          void OLED_send_data(uint8_t o_data)//写字数据
  51          {
  52   1          I2C_Start();
  53   1          write_byte(0x78);//OLED地址
  54   1          read_ACK();
C51 COMPILER V9.60.0.0   OLED                                                              07/04/2022 15:50:03 PAGE 2   

  55   1          write_byte(0x40);//寄存器地址
  56   1          read_ACK();
  57   1          write_byte(o_data);
  58   1          read_ACK();
  59   1          I2C_Stop();
  60   1      }
  61          
  62          void Column_set(uint8_t column)
  63          {
  64   1        OLED_send_cmd(0x10|(column>>4));    //设置列地址高位
  65   1        OLED_send_cmd(0x00|(column&0x0f));  //设置列地址低位   
  66   1      }
  67          
  68          
  69          void OLED_Init(void)
  70          {
  71   1        uint8_t i;
  72   1        I2C_Init();   //初始化IIC
  73   1        for(i=0;i<25;i++)
  74   1        {
  75   2          OLED_send_cmd(OLED_init_cmd[i]);
  76   2        }
  77   1      }
  78          
  79          
  80          void fill_picture(uint8_t fill_Data)
  81          {
  82   1        uint8_t m,n;
  83   1        for(m=0;m<8;m++)
  84   1        {
  85   2          OLED_send_cmd(0xb0+m);    //page0-page1
  86   2          OLED_send_cmd(0x00);    //low column start address
  87   2          OLED_send_cmd(0x10);    //high column start address
  88   2          for(n=0;n<128;n++)
  89   2            {
  90   3              OLED_send_data(fill_Data);
  91   3            }
  92   2        }
  93   1      }
  94          
  95          
  96          //坐标设置
  97          //x在0-127，y在0-7
  98          void OLED_Set_Pos(uint8_t x, uint8_t y) 
  99          {   
 100   1        OLED_send_cmd(0xb0+y);
 101   1        OLED_send_cmd(((x&0xf0)>>4)|0x10);
 102   1        OLED_send_cmd(x&0x0f); 
 103   1      }       
 104          
 105          //开启OLED显示
 106          void OLED_Display_On(void)
 107          {
 108   1        OLED_send_cmd(0X8D);  //SET DCDC命令
 109   1        OLED_send_cmd(0X14);  //DCDC ON
 110   1        OLED_send_cmd(0XAF);  //DISPLAY ON
 111   1      }
 112          
 113          //关闭OLED显示     
 114          void OLED_Display_Off(void)
 115          {
 116   1        OLED_send_cmd(0X8D);  //SET DCDC命令
C51 COMPILER V9.60.0.0   OLED                                                              07/04/2022 15:50:03 PAGE 3   

 117   1        OLED_send_cmd(0X10);  //DCDC OFF
 118   1        OLED_send_cmd(0XAE);  //DISPLAY OFF
 119   1      }      
 120          
 121          //清屏函数,清完屏,整个屏幕是黑色的  
 122          void OLED_Clear(void)  
 123          {  
 124   1        uint8_t i,n;        
 125   1        for(i=0;i<8;i++)  
 126   1        {  
 127   2          OLED_send_cmd (0xb0+i);    //设置页地址（0~7）
 128   2          OLED_send_cmd (0x00);      //设置显示位置―列低地址
 129   2          OLED_send_cmd (0x10);      //设置显示位置―列高地址   
 130   2          for(n=0;n<128;n++)OLED_send_data(0x00); 
 131   2        } //更新显示
 132   1      }
 133          
 134           
 135          void OLED_On(void) //点亮屏幕  
 136          {  
 137   1        uint8_t i,n;        
 138   1        for(i=0;i<8;i++)  
 139   1        {  
 140   2          OLED_send_cmd (0xb0+i);    //设置页地址（0~7）
 141   2          OLED_send_cmd (0x00);      //设置显示位置―列低地址
 142   2          OLED_send_cmd (0x10);      //设置显示位置―列高地址   
 143   2          for(n=0;n<128;n++)OLED_send_data(0xff); 
 144   2        } //更新显示
 145   1      }
 146          
 147          
 148          
 149          //在指定位置显示一个字符,包括部分字符
 150          //x:0~127
 151          //y:0~7
 152          //mode:0,反白显示;1,正常显示         
 153          //size:选择字体 16/12 
 154          void OLED_ShowChar(uint8_t x,uint8_t y,uint8_t chr,uint8_t Char_Size)
 155          {       
 156   1          uint8_t c=0,i=0;  
 157   1          c=chr-' ';//得到偏移后的值      
 158   1          if(x>Max_Column-1){x=0;y=y+2;}
 159   1          if(Char_Size ==16)
 160   1            {
 161   2            OLED_Set_Pos(x,y);  
 162   2            for(i=0;i<8;i++)
 163   2            OLED_send_data(F8X16[c*16+i]);
 164   2            OLED_Set_Pos(x,y+1);
 165   2            for(i=0;i<8;i++)
 166   2            OLED_send_data(F8X16[c*16+i+8]);
 167   2            }
 168   1            else {  
 169   2              OLED_Set_Pos(x,y);
 170   2              for(i=0;i<6;i++)
 171   2              OLED_send_data(F6x8[c][i]);
 172   2            }
 173   1      }
 174          
 175          //m^n函数
 176          uint32_t oled_pow(uint8_t m,uint8_t n)
 177          {
 178   1        uint32_t result=1;   
C51 COMPILER V9.60.0.0   OLED                                                              07/04/2022 15:50:03 PAGE 4   

 179   1        while(n--)result*=m;    
 180   1        return result;
 181   1      }         
 182          //显示2个数字
 183          //x,y :起点坐标  
 184          //len :数字的位数
 185          //size:字体大小
 186          //mode:模式 0,填充模式;1,叠加模式
 187          //num:数值(0~4294967295);       
 188          void OLED_ShowNum(uint8_t x,uint8_t y,uint32_t num,uint8_t len,uint8_t size2)
 189          {           
 190   1        uint8_t t,temp;
 191   1        uint8_t enshow=0;              
 192   1        for(t=0;t<len;t++)
 193   1        {
 194   2          temp=(num/oled_pow(10,len-t-1))%10;
 195   2          if(enshow==0&&t<(len-1))
 196   2          {
 197   3            if(temp==0)
 198   3            {
 199   4              OLED_ShowChar(x+(size2/2)*t,y,' ',size2);
 200   4              continue;
 201   4            }else enshow=1; 
 202   3          }
 203   2          OLED_ShowChar(x+(size2/2)*t,y,temp+'0',size2); 
 204   2        }
 205   1      } 
 206          
 207          //显示一个字符号串
 208          void OLED_ShowString(uint8_t x,uint8_t y,uint8_t *chr,uint8_t Char_Size)
 209          {
 210   1        uint8_t j=0;
 211   1        while (chr[j]!='\0')
 212   1        {   OLED_ShowChar(x,y,chr[j],Char_Size);
 213   2            x+=8;
 214   2          if(x>120){x=0;y+=2;}
 215   2            j++;
 216   2        }
 217   1      }
 218          
 219          //显示汉字
 220          void OLED_ShowCHinese(uint8_t x,uint8_t y,uint8_t no)
 221          {               
 222   1        uint8_t t,adder=0;
 223   1        OLED_Set_Pos(x,y);  
 224   1          for(t=0;t<16;t++)
 225   1          {
 226   2              OLED_send_data(Hzk[2*no][t]);
 227   2              adder+=1;
 228   2           }  
 229   1          OLED_Set_Pos(x,y+1);  
 230   1          for(t=0;t<16;t++)
 231   1            { 
 232   2              OLED_send_data(Hzk[2*no+1][t]);
 233   2              adder+=1;
 234   2            }         
 235   1      }
 236          
 237          
 238          /***********功能描述：显示显示BMP图片128×64起始点坐标(x,y),x的范围0～127，y为页的范围0～7****************
             -*/
 239          void OLED_DrawBMP(uint8_t x0, uint8_t y0,uint8_t x1, uint8_t y1,uint8_t BMP[])
C51 COMPILER V9.60.0.0   OLED                                                              07/04/2022 15:50:03 PAGE 5   

 240          {   
 241   1       uint16_t j=0;
 242   1       uint8_t x,y;
 243   1        
 244   1        if(y1%8==0) y=y1/8;      
 245   1        else y=y1/8+1;
 246   1        for(y=y0;y<y1;y++)
 247   1        {
 248   2          OLED_Set_Pos(x0,y);
 249   2          for(x=x0;x<x1;x++)
 250   2            {      
 251   3              OLED_send_data(BMP[j++]);       
 252   3            }
 253   2        }
 254   1      } 
 255          
 256          
 257          void OLED_Refresh(void)
 258          {
 259   1        uint8_t i,j;
 260   1        for(j=0;j<8;j++)
 261   1        {
 262   2          OLED_send_cmd(0xb0+j);//设置页地址位0-7
 263   2          OLED_send_cmd(0x00);//列的低地址
 264   2          OLED_send_cmd(0x10);//列的高地址
 265   2          for(i=0;i<128;i++)OLED_send_data(OLED_Gram[j][i]);
 266   2        }
 267   1      }
 268          
 269          
 270          
 271          /*画点函数，x 0-127,y 0-7,t 1为填充 0为清空*/
 272          void Draw_Point(uint8_t x, uint8_t y,uint8_t t)
 273          {
 274   1        uint8_t pos,bx,temp;
 275   1        if(x>127||y>63)return;
 276   1        pos=y/8;//pos处于0-7之间,就是处在第几页
 277   1        bx=y%8;//bx也处于0-7之间，处在该页的第几个位置
 278   1        temp=1<<bx;//把1左移bx位后放到temp中,这时的temp可以让要亮的地方置为1
 279   1      //  OLED_Set_Pos(x,pos);
 280   1      //  OLED_send_data(temp); 
 281   1        if(t)OLED_Gram[pos][x]|=temp;//和原数组取或，保留原有的1
 282   1        else OLED_Gram[pos][x]&=~temp;
 283   1      }
 284          
 285          /*画水平直线，(x,y)是直线起点，x0是结束位置*/
 286          void GUI_Hline(uint8_t x,uint8_t y,uint8_t x0)
 287          {
 288   1        uint8_t i;
 289   1        for(i=x;i<x0;i++)Draw_Point(i,y,1);
 290   1      }
 291          
 292          /*画垂直直线，(x,y)是直线起点，y0是结束位置*/
 293          void GUI_Vline(uint8_t x,uint8_t y,uint8_t y0)
 294          {
 295   1        uint8_t j;
 296   1        for(j=y;j<y0;j++)Draw_Point(x,j,1);
 297   1      }
 298          
 299          /*画一个坐标*/
 300          void GUI_Axis()
 301          {
C51 COMPILER V9.60.0.0   OLED                                                              07/04/2022 15:50:03 PAGE 6   

 302   1        GUI_Hline(2,60,100);
 303   1        GUI_Vline(2,2,60);
 304   1      }
 305          
 306          /*数组清零*/
 307          void GUI_Clear()
 308          {
 309   1        uint8_t i,j;
 310   1        for(j=0;j<8;j++)
 311   1        {
 312   2          for(i=0;i<128;i++)
 313   2          {
 314   3            OLED_Gram[j][i]=0;
 315   3          }
 316   2        }
 317   1      }
 318          
 319          
 320          
 321            


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1329    ----
   CONSTANT SIZE    =   2545    ----
   XDATA SIZE       =   1024    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      60
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
