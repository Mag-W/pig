C51 COMPILER V9.60.0.0   KEY                                                               04/05/2022 23:40:34 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE KEY
OBJECT MODULE PLACED IN .\Objects\key.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE key\key.c OPTIMIZE(8,SPEED) BROWSE INCDIR(.\public;.\1602;.\key;.\AD;.\S
                    -erial;.\Calculator) DEBUG OBJECTEXTEND PRINT(.\Listings\key.lst) TABS(2) OBJECT(.\Objects\key.obj)

line level    source

   1          #include "key.h"
   2          
   3          u8 key_status1=0;
   4          u8 key_status2=0;
   5          u8 key_flag1=0;//作为独立按键按下的标志位；
   6          u8 key_flag=0;//作为矩阵键盘按下的标志位
   7          
   8          void key_scan(void)//独立按键
   9          {
  10   1          if(key1==0)
  11   1        {
  12   2          delayms(10);//延时消抖
  13   2          if(key1==0)
  14   2          {
  15   3            key_status1=1;
  16   3            key_flag1=1;
  17   3            while(!key1);//等待按键松开
  18   3          }
  19   2        }
  20   1        
  21   1        else if(key2==0)
  22   1        {
  23   2          delayms(10);
  24   2          if(key2==0)
  25   2          {
  26   3            key_status1=2;
  27   3            key_flag1=1;
  28   3            while(!key2);
  29   3          }
  30   2        }
  31   1        
  32   1        else if(key3==0)
  33   1        {
  34   2          delayms(10);
  35   2          if(key3==0)
  36   2          {
  37   3            key_status1=3;
  38   3            key_flag1=1;
  39   3            while(!key3);
  40   3          }
  41   2          
  42   2          else if(key4==0)
  43   2        {
  44   3          delayms(10);
  45   3          if(key4==0)
  46   3          {
  47   4            key_status1=4;
  48   4            key_flag1=1;
  49   4            while(!key4);
  50   4          }
  51   3        } 
  52   2      }
  53   1      }
  54          
C51 COMPILER V9.60.0.0   KEY                                                               04/05/2022 23:40:34 PAGE 2   

  55          
  56          
  57          void matrixkeyscan()
  58          {
  59   1        u8 temp;
  60   1        //检测第一行
  61   1        P1=0x7f;
  62   1        temp=P1;
  63   1        temp=temp&0x0f;
  64   1        if(temp!=0x0f)//确保第一排有按键被按下
  65   1        {
  66   2          delayms(10);
  67   2          temp=P1;
  68   2          temp=temp&0x0f;
  69   2          if(temp!=0x0f)//确保第一排有按键被按下
  70   2          {
  71   3            key_flag=1;
  72   3            temp=P1;    //因为按键按下P2的值被改变
  73   3            switch(temp)
  74   3            {
  75   4              case 0x77:key_status2=0;//第一个按键（即P13）被按下，P13被置为低电平
  76   4              break;
  77   4              case 0x7b:key_status2=1;
  78   4              break;
  79   4              case 0x7d:key_status2=2;
  80   4              break;
  81   4              case 0x7e:key_status2=3;
  82   4              break;
  83   4              default:break;
  84   4            }
  85   3            while(temp!=0x0f)//等待按键释放
  86   3            {
  87   4              temp=P1;//一直将检测到的P1的值赋给temp
  88   4              temp=temp&0x0f;
  89   4            }
  90   3          }
  91   2        }
  92   1        
  93   1        //检测第二行
  94   1        P1=0xbf;
  95   1        temp=P1;
  96   1        temp=temp&0x0f;
  97   1        if(temp!=0x0f)//确保第一排有按键被按下
  98   1        {
  99   2          delayms(10);
 100   2          temp=P1;
 101   2          temp=temp&0x0f;
 102   2          if(temp!=0x0f)//确保第一排有按键被按下
 103   2          {
 104   3            key_flag=1;
 105   3            temp=P1;    //因为按键按下P2的值被改变
 106   3            switch(temp)
 107   3            {
 108   4              case 0xb7:key_status2=4;//第一个按键（即P13）被按下，P13被置为低电平
 109   4              break;
 110   4              case 0xbb:key_status2=5;
 111   4              break;
 112   4              case 0xbd:key_status2=6;
 113   4              break;
 114   4              case 0xbe:key_status2=7;
 115   4              break;
 116   4              default:break;
C51 COMPILER V9.60.0.0   KEY                                                               04/05/2022 23:40:34 PAGE 3   

 117   4            }
 118   3            while(temp!=0x0f)//等待按键释放
 119   3            {
 120   4              temp=P1;//一直将检测到的P1的值赋给temp
 121   4              temp=temp&0x0f;
 122   4            }
 123   3          }
 124   2        }
 125   1        
 126   1        //检测第三行
 127   1        P1=0xdf;
 128   1        temp=P1;
 129   1        temp=temp&0x0f;
 130   1        if(temp!=0x0f)//确保第一排有按键被按下
 131   1        {
 132   2          delayms(10);
 133   2          temp=P1;
 134   2          temp=temp&0x0f;
 135   2          if(temp!=0x0f)//确保第一排有按键被按下
 136   2          {
 137   3            key_flag=1;
 138   3            temp=P1;    //因为按键按下P2的值被改变
 139   3            switch(temp)
 140   3            {
 141   4              case 0xd7:key_status2=8;//第一个按键（即P13）被按下，P13被置为低电平
 142   4              break;
 143   4              case 0xdb:key_status2=9;
 144   4              break;
 145   4              case 0xdd:key_status2=10;
 146   4              break;
 147   4              case 0xde:key_status2=11;
 148   4              break;
 149   4              default:break;
 150   4            }
 151   3            while(temp!=0x0f)//等待按键释放
 152   3            {
 153   4              temp=P1;//一直将检测到的P1的值赋给temp
 154   4              temp=temp&0x0f;
 155   4            }
 156   3          }
 157   2        }
 158   1        
 159   1        //检测第四行
 160   1        P1=0xef;
 161   1        temp=P1;
 162   1        temp=temp&0x0f;
 163   1        if(temp!=0x0f)//确保第一排有按键被按下
 164   1        {
 165   2          delayms(10);
 166   2          temp=P1;
 167   2          temp=temp&0x0f;
 168   2          if(temp!=0x0f)//确保第一排有按键被按下
 169   2          {
 170   3            key_flag=1;
 171   3            temp=P1;    //因为按键按下P2的值被改变
 172   3            switch(temp)
 173   3            {
 174   4              case 0xe7:key_status2=12;//第一个按键（即P13）被按下，P13被置为低电平
 175   4              break;
 176   4              case 0xeb:key_status2=13;
 177   4              break;
 178   4              case 0xed:key_status2=14;
C51 COMPILER V9.60.0.0   KEY                                                               04/05/2022 23:40:34 PAGE 4   

 179   4              break;
 180   4              case 0xee:key_status2=15;
 181   4              break;
 182   4              default:break;
 183   4            }
 184   3            while(temp!=0x0f)//等待按键释放
 185   3            {
 186   4              temp=P1;//一直将检测到的P1的值赋给temp
 187   4              temp=temp&0x0f;
 188   4            }
 189   3          }
 190   2        }
 191   1      }
 192          
 193            


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    452    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      4       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
