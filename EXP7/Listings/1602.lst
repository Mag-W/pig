C51 COMPILER V9.60.0.0   1602                                                              04/05/2022 23:40:34 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE 1602
OBJECT MODULE PLACED IN .\Objects\1602.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE 1602\1602.c OPTIMIZE(8,SPEED) BROWSE INCDIR(.\public;.\1602;.\key;.\AD;.
                    -\Serial;.\Calculator) DEBUG OBJECTEXTEND PRINT(.\Listings\1602.lst) TABS(2) OBJECT(.\Objects\1602.obj)

line level    source

   1          #include "1602.h"
   2          
   3          void write_com(u8 com)//写命令
   4          {
   5   1        lcdrs=0;//选择为写命令模式
   6   1        lcdrw=0;//选择写
   7   1        lcden=0;
   8   1        P0=com;
   9   1        delayms(5);
  10   1        lcden=1;   //给使能端一个脉冲
  11   1        delayms(5);
  12   1        lcden=0;
  13   1      }
  14          
  15          void write_data(u8 dat)//写命令
  16          {
  17   1        lcdrs=1;           //选择为读命令模式
  18   1        lcdrw=0;//选择写
  19   1        lcden=0;
  20   1        P0=dat;
  21   1        delayms(5);
  22   1        lcden=1;
  23   1        delayms(5);
  24   1        lcden=0;
  25   1      }
  26          
  27          void lcd_init(void)
  28          {
  29   1        lcden=0;
  30   1        write_com(0x38);  //设置为16*2显示，5*7点阵，8位数据口
  31   1        write_com(0x0c);  //打开显示，不显示光标
  32   1        write_com(0x06);  //写入一个字符之后地址指针自动加1
  33   1        write_com(0x01);  //显示清0，数据指针清0
  34   1      }
  35          
  36          void lcd_clear(void)
  37          {
  38   1        write_com(0x01);
  39   1      }
  40          
  41          void lcd1602_show_string(u8 x,u8 y,u8 *str)//x,y代表坐标，x的范围为0~15，y的范围为0~1，str为要输出的字符串
  42          {
  43   1        u8 i=0;
  44   1      
  45   1        if(y>1||x>15)return;//行列参数不对则强制退出
  46   1      
  47   1        if(y<1) //第1行显示
  48   1        { 
  49   2          while(*str!='\0')//字符串是以'\0'结尾，只要前面有内容就显示
  50   2          {
  51   3            if(i<16-x)//如果字符长度超过第一行显示范围，则在第二行继续显示
  52   3            {
  53   4              write_com(0x80+i+x);//第一行显示地址设置  
  54   4            }
C51 COMPILER V9.60.0.0   1602                                                              04/05/2022 23:40:34 PAGE 2   

  55   3            else
  56   3            {
  57   4              write_com(0x40+0x80+i+x-16);//第二行显示地址设置  
  58   4            }
  59   3            write_data(*str);//显示内容
  60   3            str++;//指针递增
  61   3            i++;  
  62   3          } 
  63   2        }
  64   1        else  //第2行显示
  65   1        {
  66   2          while(*str!='\0')
  67   2          {
  68   3            if(i<16-x) //如果字符长度超过第二行显示范围，则在第一行继续显示
  69   3            {
  70   4              write_com(0x80+0x40+i+x); 
  71   4            }
  72   3            else
  73   3            {
  74   4              write_com(0x80+i+x-16); 
  75   4            }
  76   3            write_data(*str);
  77   3            str++;
  78   3            i++;  
  79   3          } 
  80   2        }       
  81   1      }
  82          
  83          void AD_Display(u8 adc_value)
  84          {
  85   1                    u8 display[]={"0123456789"};     //定义数组，并赋初值
  86   1                    lcd1602_show_string(0,0,"The value of AD:");//第一行显示
  87   1                    write_com(0x80+0x40+0x04);
  88   1                    write_data(display[adc_value/100]);
  89   1                    write_data(display[adc_value/10%10]);
  90   1                    write_data(display[adc_value%10]);
  91   1      }
  92          
  93          
  94          
  95          
  96          
  97          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    341    ----
   CONSTANT SIZE    =     28    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      17
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
